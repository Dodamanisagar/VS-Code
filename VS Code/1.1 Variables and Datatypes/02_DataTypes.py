# Python Data Type Hierarchy

# --- Introduction ---
# Python supports various data types, broadly categorized into built-in and user-defined types.
# These data types can be arranged hierarchically as follows:

# --- Top-Level ---
# 1. None Type
# 2. Numeric Types
# 3. Sequence Types
# 4. Set Types
# 5. Mapping Types
# 6. Boolean Type
# 7. Binary Types

# --- Hierarchy Details ---

# 1. None Type
#    - Represents the absence of a value.
# Example:
none_var = None
print("None Type Example:", none_var)

# 2. Numeric Types
#    - int: Integer numbers
#    - float: Floating-point numbers
#    - complex: Complex numbers with real and imaginary parts
# Example:
int_var = 10
float_var = 10.5
complex_var = 3 + 4j
print("Numeric Types Example:", int_var, float_var, complex_var)

# 3. Sequence Types
#    - str: String (text data)
#    - list: Mutable ordered collection of elements
#    - tuple: Immutable ordered collection of elements
#    - range: Sequence of numbers generated by a range function
# Example:
str_var = "Hello"
list_var = [1, 2, 3]
tuple_var = (4, 5, 6)
range_var = range(1, 10)
print("Sequence Types Example:", str_var, list_var, tuple_var, list(range_var))

# 4. Set Types
#    - set: Unordered collection of unique elements
#    - frozenset: Immutable version of set
# Example:
set_var = {1, 2, 3}
frozenset_var = frozenset([4, 5, 6])
print("Set Types Example:", set_var, frozenset_var)

# 5. Mapping Types
#    - dict: Key-value pairs (mutable)
# Example:
dict_var = {"key1": "value1", "key2": "value2"}
print("Mapping Type Example:", dict_var)

# 6. Boolean Type
#    - bool: Represents True or False
# Example:
bool_var = True
print("Boolean Type Example:", bool_var)

# 7. Binary Types
#    - bytes: Immutable sequence of bytes
#    - bytearray: Mutable sequence of bytes
#    - memoryview: Memory view of another binary object
# Example:
bytes_var = b"hello"
bytearray_var = bytearray(b"hello")
memoryview_var = memoryview(bytearray_var)
print("Binary Types Example:", bytes_var, bytearray_var, memoryview_var.tolist())

# --- Summary ---
# Python's data type hierarchy allows for flexible handling of various types of data.
# These types are organized into categories based on their behavior and use cases.



#Examples

# Integer
my_int = 10
print(type(my_int))  # Output: <class 'int'>

# Float
my_float = 10.5
print(type(my_float))  # Output: <class 'float'>

# String
my_string = "Hello, World!"
print(type(my_string))  # Output: <class 'str'>

# Boolean
my_bool = True
print(type(my_bool))  # Output: <class 'bool'>

# List
my_list = [1, 2, 3, 4, 5]
print(type(my_list))  # Output: <class 'list'>

# Tuple
my_tuple = (1, 2, 3, 4, 5)
print(type(my_tuple))  # Output: <class 'tuple'>

# Dictionary
my_dict = {"name": "John", "age": 30}
print(type(my_dict))  # Output: <class 'dict'>

# Set
my_set = {1, 2, 3, 4, 5}
print(type(my_set))  # Output: <class 'set'> 
